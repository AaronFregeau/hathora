import { UserId, PlayerName, QuestId, Role, Vote } from "./types";

export type StateId = string;

export class LsotClient {
  private constructor(private socket: SocketIOClient.Socket) {}

  public static async registerUser(username: PlayerName): Promise<UserId> {
    const res = await fetch("/register", {
      method: "POST",
      body: JSON.stringify({ playerName: username })
    });
    const { userId } = await res.json();
    return userId;
  }

  public static async connect(userId: UserId): Promise<LsotClient> {
    const stateId = await this.createState(userId);
    return new LsotClient(io({ query: { stateId, userId } }));
  }

  private static async createState(userId: UserId): Promise<StateId> {
    const res = await fetch("/new?userId=" + userId, { method: "POST" });
    const { stateId } = await res.json();
    return stateId;
  }

{{methods}}  public disconnect(): void {
    this.socket.close();
  }
}
